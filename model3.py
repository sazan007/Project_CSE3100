# -*- coding: utf-8 -*-
"""breast_cancer_cnn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RkmhNK3K8aGmO673G1d71Quw-diBK8F1
"""

import numpy as np
import cv2 
import os
import matplotlib.pyplot as plt
import random
import tensorflow as tf

directory = r'E:\dataset\breast_cancer\histopathological\8863'
catagories = ["0","1"] 

data = [] #will hold the image array and label

for cat in catagories:
  folder = os.path.join(directory,cat)
  print(folder)

  label = catagories.index(cat) #label of the file -- 0/1 

  for img in os.listdir(folder):
    file = os.path.join(folder,img)
    #print(file)

    #converting image to pixel array
    img_array = cv2.imread(file)
    #resize 
    img_array=cv2.resize(img_array,(50,50))

    #plt.imshow(img_array);
    #break

    data.append([img_array,label])

#print(data)

#randomize the sequence
random.shuffle(data)

#taking the image and label into two different list and converting it to numpy array

x=[]
y=[]

for feature,label in data:
  x.append(feature)
  y.append(label)

x = np.array(x)
y = np.array(y)

print(x.shape)
print(y.shape)

#rescaling x for faster calculations

x=x/255.0

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=2)

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D,MaxPooling2D,Flatten,Dense,Activation

model = Sequential()
model.add(Conv2D(32,(2,2),padding='same',  activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Conv2D(32,(2,2),padding='same',  activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Conv2D(32,(2,2),padding='same',  activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))


model.add(Conv2D(32,(2,2),padding='same',  activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Conv2D(32,(2,2),padding='same',  activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))



model.add(Flatten())

model.add(Dense(2,activation='softmax'))

#compiling the model
model.compile(loss='sparse_categorical_crossentropy',optimizer='adam',metrics=['accuracy'])

print(X_train.shape)
print(y_train.shape)

model.fit(X_train,y_train,epochs=10,validation_split=0.1)


model.save('\model3.h5')

# directory = r"E:\dataset\breast_cancer\histopathological\8864"
# catagories = ["0","1"] 
# folder = os.path.join(directory,catagories[0])
# lst = os.listdir(folder)
# filee  = lst[0];
# image = os.path.join(folder,filee)
# img_array = cv2.imread(image) 
# #filee = cv2.resize(img_array,(50,50))
# filee=img_array
# #plt.imshow(filee)
# #print(filee.shape)
# filee = np.reshape(filee, (-1, filee.shape[0], filee.shape[1],filee.shape[2]))


# #data = []
# #data.append([filee,1])
# #X=[]
# #Y=[]
# #for a,b in data:
#  # X.append(a)
#  # Y.append(b)

# #X = np.array(X)
# #Y = np.array(Y)

# #X=X/255.0
# filee = filee/255.0
# ans=model.predict(filee)

# output = np.argmax(ans[0])
# print(output)